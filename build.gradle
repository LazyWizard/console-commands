// TODO: Add Example Commands mod as a sub-project and include its zip in the buildMod task

apply plugin: 'java'
apply plugin: 'kotlin'

buildscript {
    ext.kotlin_version = '1.1.60'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
}

ext {
    Properties localProps = new Properties()
    localProps.load(new FileInputStream(file('local.properties')))
    //props.each { prop -> project.ext.set(prop.key, prop.value) }
    ext.gameDir = localProps['starsectorInstallDir']
    ext.lazylib = localProps['lazylibJar']
    ext.outputPath = localProps['outputPath']
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jre7'
    compile fileTree(dir: gameDir, include: '*.jar', exclude: '*_obf.jar')
    compile files(lazylib)
}

jar {
    //from sourceSets.main.java
    from sourceSets.main.kotlin
    destinationDir file(outputPath + '/jar')
    archiveName 'lw_Console.jar'
}

task printProps() {
    doLast {
        println 'Game directory: ' + gameDir
        println 'LazyLib jar: ' + lazylib
        println 'Output path: ' + outputPath
    }
}

task copyRes(type: Copy) {
    from 'src/main/res'
    into outputPath
}

task buildMod(dependsOn: [jar, copyRes]) {
    doLast {
        println 'Mod folder created at \"' + outputPath + '\"'
    }
}

// TODO: Zip up buildMod results and include version number in filename
task zip(dependsOn: buildMod/*, type: Zip*/) {
    /*from outputPath
    archiveName = 'todo'
    destinationDir = 'build/zip'*/
    doLast {
        println 'Would zip mod now'
    }
}

copyRes {
    description = 'Copies mod files to the output directory'
    group = 'build'
}

buildMod {
    description = 'Builds the jar and assembles the mod folder.'
    group = 'build'
}

zip {
    description = 'Creates a zip ready for distribution.'
    group = 'build'
}