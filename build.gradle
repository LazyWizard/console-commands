import java.nio.file.Paths
import groovy.json.JsonSlurper

// TODO: Add Example Commands mod as a sub-project and include its zip in the buildMod task

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = 1.7
defaultTasks 'buildMod'

ext {
    Properties localProps = new Properties()
    localProps.load(new FileInputStream(file('local.properties')))
    compileJava.options.fork = true
    compileJava.options.forkOptions.executable = Paths.get(localProps['jdkLocation'].toString(), 'bin', 'javac.exe')
    compileKotlin.kotlinOptions.jdkHome = Paths.get(localProps['jdkLocation'].toString())
    ext.gameDir = localProps['starsectorInstallDir']
    ext.lazylib = localProps['lazylibJar']
    ext.outputPath = localProps['outputPath']
    ext.modVersion = new JsonSlurper().parseText(file('src/main/mod/mod_info.json').text).version
}

buildscript {
    ext.kotlin_version = '1.2.30'
    ext.dokka_version = '0.9.15'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
    }
}

repositories {
    mavenCentral()
}

//  Please note: any dependencies marked 'compile' or 'runtime' will be included in the jar!
dependencies {
    compileOnly('org.jetbrains.kotlin:kotlin-stdlib') { transitive = false }
    compileOnly('org.jetbrains.kotlin:kotlin-stdlib-jdk7') { transitive = false }
    compileOnly fileTree(dir: gameDir, include: '*.jar', exclude: '*_obf.jar')
    compileOnly files(lazylib)
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.6"
    }
}

jar {
    //from sourceSets.main.java
    from sourceSets.main.kotlin
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    destinationDir file(Paths.get(outputPath, 'jars/'))
    archiveName 'lw_Console.jar'
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

task printProps() {
    doLast {
        println 'Game directory: ' + gameDir
        println 'LazyLib jar: ' + lazylib
        println 'Output path: ' + outputPath
        println 'Mod version: ' + modVersion
    }
}

task copyModFiles(type: Copy) {
    from 'src/main/mod'
    into outputPath
}

task buildMod(dependsOn: [jar, copyModFiles]) {
    doLast {
        println 'Mod folder created at \"' + file(outputPath).absolutePath + '\"'
    }
}

task zipDoc(type: Zip, dependsOn: dokka) {
    from("$buildDir/javadoc")
    include '**/*'
    archiveName = 'javadoc.zip'
    destinationDir = file(outputPath)
}

task zipMod(type: Zip, dependsOn: [buildMod, zipDoc]) {
    from(outputPath) { into 'Console Commands' }
    include '**/*'
    archiveName = "Console Commands ${modVersion}.zip"
    destinationDir = file('build/zip/')
    doLast {
        println 'Mod zip placed in \"' + destinationDir.absolutePath + '\"'
    }
}

copyModFiles {
    description = 'Copies non-compiled mod files to the output directory.'
    group = 'build'
}

buildMod {
    description = 'Builds the jar and assembles the mod folder.'
    group = 'build'
}

zipMod {
    description = 'Builds the mod and creates a zip archive ready for distribution.'
    group = 'build'
}
